//
//  CharactersListPresenterTests.swift
//  MarvelAPIListSample
//
//  Created by marco.iniguez.ollero on 6/7/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the VIP Swift Xcode Templates(https://github.com/Andrei-Popilian/VIP_Design_Xcode_Template)
//  so you can apply clean architecture to your iOS and MacOS projects,
//  see more http://clean-swift.com
//

import XCTest
@testable import MarvelAPIListSample


final class CharactersListPresenterTests: XCTestCase {
  
  private var presenter: CharactersListPresenter!
  private var viewController: CharactersListViewControllerSpy!
  
  override func setUp() {
    viewController = CharactersListViewControllerSpy()
    presenter = CharactersListPresenter(viewController: viewController)
  }
  
  override func tearDown() {
    viewController = nil
    presenter = nil
  }
}


// MARK: - Tests
extension CharactersListPresenterTests {
  
  func testShowDetail() {
    XCTAssertNil(viewController.passedId)
    let testId = 1011334
    presenter.presentResponse(.showDetail(id: testId))
    XCTAssertEqual(viewController.passedId, testId)
  }
  func testShowError() {
    XCTAssertNil(viewController.passedId)
    let testErrorModel = ErrorHelper.createGenericError()
    presenter.presentResponse(.showError(model: testErrorModel))
    XCTAssertEqual(viewController.passedErrorModel.message, testErrorModel.message)
  }
  
  func testCharactersList() {
    
    XCTAssertNil(viewController.passedList)
    if let data = FileManager.default.contents(atPath: R.file.charactersListJson()!.path) {
      let decoder = JSONDecoder()
      do {
        if let dataList = try decoder.decode(CharactersList.self, from: data).data, let testList = dataList.results {
          presenter.presentResponse(.prepareCharactersList(data: testList))
          XCTAssertEqual(viewController.passedList.items.count, testList.count)
        }
      } catch {
        fatalError(error.localizedDescription)
      }
    }
  }
}



// MARK: - Spy Classes Setup
private extension CharactersListPresenterTests {
  
  final class CharactersListViewControllerSpy: UIViewController, CharactersListDisplayLogic {
    var passedList: CharactersListModel.ViewDataSource!
    var passedId: Int!
    var passedErrorModel: ErrorModel!
    
    func displayViewModel(_ viewModel: CharactersListModel.ViewModel) {
      switch viewModel {
      case let .prepareCharactersList(viewModelData):
        passedList = viewModelData
        
      case let .showDetail(id):
        passedId = id
        
      case let .showError(model):
        passedErrorModel = model
        
      }
    }
  }
}
